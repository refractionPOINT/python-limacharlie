steps:
- id: "Prepare"
  name: "python:3.11-slim"
  entrypoint: "bash"
  args:
    - "-c"
    - |
      # Cloud Build does shallow clone (no way to change it) so we need to unshallow it
      # to get access to tags and commits so setuptools-scm can correctly read the
      # version from git.
      apt-get update && apt-get install -y git

      git fetch --unshallow || git fetch --all

      python -m pip install setuptools-scm
      _VERSION=$(python -m setuptools_scm 2> /dev/null)
      [ -n "$$_VERSION" ] || { echo "ERROR: _VERSION is empty or not set"; exit 1; };
      echo $$_VERSION > version.txt
      echo "Using Docker version tag: $$_VERSION"

- id: "Run Unit Tests"
  name: "python:3.11-slim"
  entrypoint: "bash"
  args:
    - "-c"
    - |
      pip install --upgrade pip
      pip install -e ".[test]"

      pytest -s -v --durations=10 --reruns 3 --reruns-delay 5 tests/unit/

- id: "Run Integration Tests"
  name: "python:3.11-slim"
  entrypoint: "bash"
  args:
    - "-c"
    - |
      pip install --upgrade pip
      pip install -e ".[test]"

      # We use rerun since tests are flaky
      pytest -s -v --durations=10 --reruns 3 --reruns-delay 10 tests/integration/ --oid=${_OID} --key=${_KEY}

- id: "Login to DockerHub"
  name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args: ['-c', 'docker login --username=$$USERNAME --password=$$PASSWORD']
  secretEnv: ['USERNAME', 'PASSWORD']

- id: "Build Docker Image"
  name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args:
    - "-c"
    - |
      _VERSION=$(cat version.txt)
      [ -n "$$_VERSION" ] || { echo "ERROR: _VERSION is empty or not set"; exit 1; };
      docker build -f ./Dockerfile \
        -t refractionpoint/limacharlie:latest \
        -t refractionpoint/limacharlie:$$_VERSION \
        .

- id: "Push Image to Docker Hub"
  name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args:
    - "-c"
    - |
      _VERSION=$(cat version.txt)
      [ -n "$$_VERSION" ] || { echo "ERROR: _VERSION is empty or not set"; exit 1; };
      docker push refractionpoint/limacharlie:latest
      docker push refractionpoint/limacharlie:$$_VERSION || true

availableSecrets:
  secretManager:
  - versionName: projects/${PROJECT_ID}/secrets/DOCKERHUB/versions/latest
    env: 'PASSWORD'
  - versionName: projects/${PROJECT_ID}/secrets/DOCKERHUB_USERNAME/versions/latest
    env: 'USERNAME'
